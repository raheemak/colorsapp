[{"/Users/raheema/Desktop/Colors/client/src/index.js":"1","/Users/raheema/Desktop/Colors/client/src/App.js":"2","/Users/raheema/Desktop/Colors/client/src/reportWebVitals.js":"3","/Users/raheema/Desktop/Colors/client/src/Layout/Header.js":"4","/Users/raheema/Desktop/Colors/client/src/Forms/AddUserForm.js":"5","/Users/raheema/Desktop/Colors/client/src/Forms/SearchByColorForm.js":"6","/Users/raheema/Desktop/Colors/client/src/ResultsTable/ByColorResults.js":"7","/Users/raheema/Desktop/Colors/client/src/ResultsTable/AllUsersResults.js":"8"},{"size":535,"mtime":1654642455193,"results":"9","hashOfConfig":"10"},{"size":1738,"mtime":1654743653936,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1654642455196,"results":"12","hashOfConfig":"10"},{"size":3448,"mtime":1654914672112,"results":"13","hashOfConfig":"10"},{"size":4712,"mtime":1654899418471,"results":"14","hashOfConfig":"10"},{"size":1974,"mtime":1654914837944,"results":"15","hashOfConfig":"10"},{"size":1894,"mtime":1655073257099,"results":"16","hashOfConfig":"10"},{"size":2608,"mtime":1655073248489,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1ckzeaq",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/raheema/Desktop/Colors/client/src/index.js",[],[],[],"/Users/raheema/Desktop/Colors/client/src/App.js",["46","47"],[],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport ResponsiveAppBar from \"./Layout/Header\"\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport AddUserForm from \"./Forms/AddUserForm\"\nimport SearchByColorForm from './Forms/SearchByColorForm';\n\nfunction App() {\n  const [data, setData] = React.useState();\n  const [showUserForm, setShowUserForm] =React.useState (false)\n  const [showSearchForm, setShowSearchForm] = React.useState (false)\n  \n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);\n\n  const showEnterUserFormHandler = ()=>{\n    setShowSearchForm(false)\n    setShowUserForm (true)\n  }\n\n  const showSearchFormHandler = ()=>{\n    setShowUserForm (false)\n    setShowSearchForm(true)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <ResponsiveAppBar />\n      <Box sx={{ flexGrow: 1 }} style={{padding: \"18px 36px\"}}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" spacing={2}   alignItems=\"center\" justifyContent=\"center\">\n              <Button variant=\"contained\" onClick = {showEnterUserFormHandler} style={{backgroundColor: \"#65cc66\"}}>Add User</Button>\n              <Button variant=\"contained\" onClick = {showSearchFormHandler} style={{backgroundColor: \"#65cc66\"}}>Search by Color</Button>\n            </Stack>\n          </Grid>\n          <Grid item xs={12}>\n            {showUserForm  && <AddUserForm/>}\n            {showSearchForm && <SearchByColorForm/>}\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;","/Users/raheema/Desktop/Colors/client/src/reportWebVitals.js",[],[],"/Users/raheema/Desktop/Colors/client/src/Layout/Header.js",[],[],"/Users/raheema/Desktop/Colors/client/src/Forms/AddUserForm.js",["48","49","50","51"],[],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Card from '@mui/material/Card';\n\nexport default function AddUserForm() {\n\n  const [username, setUsername] = React.useState(\"\")\n  const [group, setGroup] = React.useState(\"\")\n  const [color, setColor] = React.useState(\"\")\n  const [response, setResponse] = React.useState({ username: \"\", color: \"\", group: \"\" })\n  const [submitted, setSubmitted] = React.useState(false)\n  const [showError, setShowError] = React.useState(false)\n  const submitHandler =  () => {\n    \n    //make sure none of the fields are empty \n    if (group === \"\" || color === \"\" || username === \"\") {\n      setShowError(true)\n      setSubmitted(false)\n      return;\n    }\n    setSubmitted(true);\n    setShowError(false)\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n     fetch(`/api/v1/user?username=${username}&color=${color}&group=${group}`, requestOptions)\n      .then(response => response.json())\n      .then(data => { setResponse(data)  });\n\n     \n\n  }\n\n  const usernameHandler = (event) => {\n    let usernameString = event.target.value.trim()\n    //remove special characters and numbers\n    usernameString = usernameString.replace(/[^a-zA-Z ]/g, \"\")\n    //capitalize first letter only \n    usernameString = usernameString.charAt(0).toUpperCase() + usernameString.slice(1).toLowerCase()\n    setUsername(usernameString)\n    if (username === \"\")\n      setShowError(true)\n\n  }\n\n  const groupHandler = (event) => {\n    let groupString = event.target.value.trim()\n    //remove special characters\n    groupString = groupString.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    //capitalize first letter only \n    groupString = groupString.charAt(0).toUpperCase() + groupString.slice(1).toLowerCase()\n    setGroup(groupString)\n    setSubmitted(false)\n    if (group === \"\")\n      setShowError(true)\n\n  }\n\n  const colorHandler = (event) => {\n    let colorString = event.target.value.trim().toLowerCase()\n    //remove special characters and numbers\n    colorString = colorString.replace(/[^a-zA-Z ]/g, \"\")\n    setColor(colorString)\n    setSubmitted(false)\n    if (color === \"\")\n      setShowError(true)\n  }\n\n  const description = () => {\n    if (showError) {\n      return <Alert variant=\"outlined\" severity=\"error\">\n        Please enter required fields.\n      </Alert>\n    }\n    else if (submitted) {\n      return <Alert variant=\"outlined\" severity=\"success\">\n        User added!\n      </Alert>\n\n    } else {\n      return <p>Enter information below to get started.</p>\n    }\n  }\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <div style={{ paddingBottom: \"10px\" }}>\n          {description()}\n        </div>\n      </Grid>\n      <Grid item xs={12}>\n        <form>\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"center\">\n\n            <TextField label=\"User Name\" variant=\"filled\" color={(showError && username === \"\") ? \"error\" : \"success\"} focused onChange={usernameHandler} />\n            <TextField label=\"Group\" variant=\"filled\" color={(showError && group === \"\") ? \"error\" : \"success\"} focused onChange={groupHandler} />\n            <TextField label=\"Color\" variant=\"filled\" color={(showError && color === \"\") ? \"error\" : \"success\"} focused onChange={colorHandler} />\n          </Stack>\n          <div style={{ paddingTop: \"5px\" }}>\n            <Button variant=\"contained\" onClick={submitHandler} style={{ backgroundColor: \"#65cc66\" }}>Submit</Button>\n          </div>\n\n        </form>\n\n      </Grid>\n      {(submitted && !showError) && <Grid item xs={12} >\n        <Card sx={{ minWidth: 500, boxShadow: `0px 2px 1px -1px rgb(0 0 0 / 20%), 1px 1px 1px 1px ${color}, 1px 1px 3px 1px rgb(0 0 0 / 12%)` }}>\n          <CardContent>\n\n            <Typography variant=\"h5\" component=\"div\" sx={{ color: color }}>\n              Added User Information\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              Username: {response.username}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              Group: {response.group}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              Color: {response.color}\n            </Typography>\n\n          </CardContent>\n\n        </Card>\n      </Grid>\n      }\n    </Grid >\n  )\n}\n","/Users/raheema/Desktop/Colors/client/src/Forms/SearchByColorForm.js",["52","53","54"],[],"import InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport * as React from 'react';\nimport ByColorResults from \"../ResultsTable/ByColorResults\"\nimport AllUsersResults from \"../ResultsTable/AllUsersResults\"\nimport Stack from '@mui/material/Stack';\n\nexport default function SearchByColorForm() {\n  const [color, setColor] = React.useState('');\n  const [colors, setColors] = React.useState([])\n  const [showTable, setShowTable] = React.useState(false)\n\n  const handleChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  React.useEffect(() => {\n    fetch(\"/api/v1/colors\")\n      .then((res) => res.json())\n      .then((data) => { setColors(data.colors) });\n  }, []);\n\n\n  return (\n    <div>\n      <FormControl size=\"small\" color=\"success\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Color</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          sx={{ color: { color }, fontSize: \".75rem\" }}\n          value={color}\n          label=\"Color\"\n          onChange={handleChange} >\n          <MenuItem value=\"\" sx={{ fontSize: \".75rem\" }}>\n            <em>None</em>\n          </MenuItem>\n          {colors && colors.map(color =>\n            <MenuItem value={color} sx={{ color: { color }, fontSize: \".75rem\" }}>\n              {color}\n            </MenuItem>)}\n        </Select>\n        <FormHelperText>\n          Select a color. Select none to view all users.\n        </FormHelperText>\n      </FormControl>\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"center\">\n        {(color != \"\") && <ByColorResults colorProp={color} />}\n        {(color === \"\") && <AllUsersResults colorProp={color} />}\n      </Stack>\n    </div>\n  );\n}","/Users/raheema/Desktop/Colors/client/src/ResultsTable/ByColorResults.js",[],[],"/Users/raheema/Desktop/Colors/client/src/ResultsTable/AllUsersResults.js",["55"],[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":13,"column":10,"nodeType":"58","messageId":"59","endLine":13,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":56,"column":68,"nodeType":"63","messageId":"64","endLine":56,"endColumn":69,"suggestions":"65"},{"ruleId":"61","severity":1,"message":"66","line":56,"column":70,"nodeType":"63","messageId":"64","endLine":56,"endColumn":71,"suggestions":"67"},{"ruleId":"61","severity":1,"message":"68","line":56,"column":72,"nodeType":"63","messageId":"64","endLine":56,"endColumn":73,"suggestions":"69"},{"ruleId":"61","severity":1,"message":"70","line":56,"column":78,"nodeType":"63","messageId":"64","endLine":56,"endColumn":79,"suggestions":"71"},{"ruleId":"56","severity":1,"message":"72","line":14,"column":10,"nodeType":"58","messageId":"59","endLine":14,"endColumn":19},{"ruleId":"56","severity":1,"message":"73","line":14,"column":21,"nodeType":"58","messageId":"59","endLine":14,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":51,"column":17,"nodeType":"76","messageId":"77","endLine":51,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":18,"column":6,"nodeType":"80","endLine":18,"endColumn":8,"suggestions":"81"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\{.","Literal","unnecessaryEscape",["82","83"],"Unnecessary escape character: \\}.",["84","85"],"Unnecessary escape character: \\[.",["86","87"],"Unnecessary escape character: \\/.",["88","89"],"'showTable' is assigned a value but never used.","'setShowTable' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.colorProp'. Either include it or remove the dependency array.","ArrayExpression",["90"],{"messageId":"91","fix":"92","desc":"93"},{"messageId":"94","fix":"95","desc":"96"},{"messageId":"91","fix":"97","desc":"93"},{"messageId":"94","fix":"98","desc":"96"},{"messageId":"91","fix":"99","desc":"93"},{"messageId":"94","fix":"100","desc":"96"},{"messageId":"91","fix":"101","desc":"93"},{"messageId":"94","fix":"102","desc":"96"},{"desc":"103","fix":"104"},"removeEscape",{"range":"105","text":"106"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"107","text":"108"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"109","text":"106"},{"range":"110","text":"108"},{"range":"111","text":"106"},{"range":"112","text":"108"},{"range":"113","text":"106"},{"range":"114","text":"108"},"Update the dependencies array to be: [props.colorProp]",{"range":"115","text":"116"},[1954,1955],"",[1954,1954],"\\",[1956,1957],[1956,1956],[1958,1959],[1958,1958],[1964,1965],[1964,1964],[625,627],"[props.colorProp]"]