[{"/Users/raheema/Desktop/Colors/client/src/index.js":"1","/Users/raheema/Desktop/Colors/client/src/App.js":"2","/Users/raheema/Desktop/Colors/client/src/reportWebVitals.js":"3","/Users/raheema/Desktop/Colors/client/src/Layout/Header.js":"4","/Users/raheema/Desktop/Colors/client/src/Forms/AddUserForm.js":"5","/Users/raheema/Desktop/Colors/client/src/Forms/SearchByColorForm.js":"6","/Users/raheema/Desktop/Colors/client/src/ResultsTable/ByColorResults.js":"7","/Users/raheema/Desktop/Colors/client/src/ResultsTable/AllUsersResults.js":"8","/Users/raheema/Desktop/Colors/client/src/store/APIContext.js":"9","/Users/raheema/Desktop/Colors/client/src/store/APIProvider.js":"10"},{"size":535,"mtime":1654642455193,"results":"11","hashOfConfig":"12"},{"size":1689,"mtime":1655089460876,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1654642455196,"results":"14","hashOfConfig":"12"},{"size":3448,"mtime":1654914672112,"results":"15","hashOfConfig":"12"},{"size":4880,"mtime":1655087882591,"results":"16","hashOfConfig":"12"},{"size":2248,"mtime":1655087860577,"results":"17","hashOfConfig":"12"},{"size":2185,"mtime":1655148542873,"results":"18","hashOfConfig":"12"},{"size":2884,"mtime":1655087752546,"results":"19","hashOfConfig":"12"},{"size":146,"mtime":1655087275472,"results":"20","hashOfConfig":"12"},{"size":1374,"mtime":1655176765228,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1ckzeaq",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raheema/Desktop/Colors/client/src/index.js",[],[],[],"/Users/raheema/Desktop/Colors/client/src/App.js",[],[],"/Users/raheema/Desktop/Colors/client/src/reportWebVitals.js",[],[],"/Users/raheema/Desktop/Colors/client/src/Layout/Header.js",[],[],"/Users/raheema/Desktop/Colors/client/src/Forms/AddUserForm.js",["57","58","59","60"],[],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Card from '@mui/material/Card';\nimport APIContext from '../store/APIContext';\n\nexport default function AddUserForm() {\n\n  const [username, setUsername] = React.useState(\"\")\n  const [group, setGroup] = React.useState(\"\")\n  const [color, setColor] = React.useState(\"\")\n  const [response, setResponse] = React.useState({ username: \"\", color: \"\", group: \"\" })\n  const [submitted, setSubmitted] = React.useState(false)\n  const [showError, setShowError] = React.useState(false)\n  const apiContext = React.useContext(APIContext)\n\n\n  const submitHandler =  () => {\n    \n    //make sure none of the fields are empty \n    if (group === \"\" || color === \"\" || username === \"\") {\n      setShowError(true)\n      setSubmitted(false)\n      return;\n    }\n    setSubmitted(true);\n    setShowError(false)\n\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json',\n      'Authorization': apiContext.authorization}\n    };\n     fetch(`${apiContext.api_url}/api/v1/user?username=${username}&color=${color}&group=${group}`, requestOptions)\n      .then(response => response.json())\n      .then(data => { setResponse(data)  });\n\n     \n\n  }\n\n  const usernameHandler = (event) => {\n    let usernameString = event.target.value.trim()\n    //remove special characters and numbers\n    usernameString = usernameString.replace(/[^a-zA-Z ]/g, \"\")\n    //capitalize first letter only \n    usernameString = usernameString.charAt(0).toUpperCase() + usernameString.slice(1).toLowerCase()\n    setUsername(usernameString)\n    if (username === \"\")\n      setShowError(true)\n\n  }\n\n  const groupHandler = (event) => {\n    let groupString = event.target.value.trim()\n    //remove special characters\n    groupString = groupString.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    //capitalize first letter only \n    groupString = groupString.charAt(0).toUpperCase() + groupString.slice(1).toLowerCase()\n    setGroup(groupString)\n    setSubmitted(false)\n    if (group === \"\")\n      setShowError(true)\n\n  }\n\n  const colorHandler = (event) => {\n    let colorString = event.target.value.trim().toLowerCase()\n    //remove special characters and numbers\n    colorString = colorString.replace(/[^a-zA-Z ]/g, \"\")\n    setColor(colorString)\n    setSubmitted(false)\n    if (color === \"\")\n      setShowError(true)\n  }\n\n  const description = () => {\n    if (showError) {\n      return <Alert variant=\"outlined\" severity=\"error\">\n        Please enter required fields.\n      </Alert>\n    }\n    else if (submitted) {\n      return <Alert variant=\"outlined\" severity=\"success\">\n        User added!\n      </Alert>\n\n    } else {\n      return <p>Enter information below to get started.</p>\n    }\n  }\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <div style={{ paddingBottom: \"10px\" }}>\n          {description()}\n        </div>\n      </Grid>\n      <Grid item xs={12}>\n        <form>\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"center\">\n\n            <TextField label=\"User Name\" variant=\"filled\" color={(showError && username === \"\") ? \"error\" : \"success\"} focused onChange={usernameHandler} />\n            <TextField label=\"Group\" variant=\"filled\" color={(showError && group === \"\") ? \"error\" : \"success\"} focused onChange={groupHandler} />\n            <TextField label=\"Color\" variant=\"filled\" color={(showError && color === \"\") ? \"error\" : \"success\"} focused onChange={colorHandler} />\n          </Stack>\n          <div style={{ paddingTop: \"5px\" }}>\n            <Button variant=\"contained\" onClick={submitHandler} style={{ backgroundColor: \"#65cc66\" }}>Submit</Button>\n          </div>\n\n        </form>\n\n      </Grid>\n      {(submitted && !showError) && <Grid item xs={12} >\n        <Card sx={{ minWidth: 500, boxShadow: `0px 2px 1px -1px rgb(0 0 0 / 20%), 1px 1px 1px 1px ${color}, 1px 1px 3px 1px rgb(0 0 0 / 12%)` }}>\n          <CardContent>\n\n            <Typography variant=\"h5\" component=\"div\" sx={{ color: color }}>\n              Added User Information\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              Username: {response.username}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              Group: {response.group}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              Color: {response.color}\n            </Typography>\n\n          </CardContent>\n\n        </Card>\n      </Grid>\n      }\n    </Grid >\n  )\n}\n","/Users/raheema/Desktop/Colors/client/src/Forms/SearchByColorForm.js",["61","62","63","64"],[],"import InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport * as React from 'react';\nimport ByColorResults from \"../ResultsTable/ByColorResults\"\nimport AllUsersResults from \"../ResultsTable/AllUsersResults\"\nimport Stack from '@mui/material/Stack';\nimport APIContext from '../store/APIContext';\n\n\nexport default function SearchByColorForm() {\n  const [color, setColor] = React.useState('');\n  const [colors, setColors] = React.useState([])\n  const [showTable, setShowTable] = React.useState(false)\n  const apiContext = React.useContext(APIContext)\n\n  const handleChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  React.useEffect(() => {\n\n    const requestOptions = {\n      headers: { 'Content-Type': 'application/json',\n      'Authorization': apiContext.authorization}\n    };\n\n    fetch(`${apiContext.api_url}/api/v1/colors`, requestOptions)\n      .then((res) => res.json())\n      .then((data) => { setColors(data.colors) });\n  }, []);\n\n\n  return (\n    <div>\n      <FormControl size=\"small\" color=\"success\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Color</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          sx={{ color: { color }, fontSize: \".75rem\" }}\n          value={color}\n          label=\"Color\"\n          onChange={handleChange} >\n          <MenuItem value=\"\" sx={{ fontSize: \".75rem\" }}>\n            <em>None</em>\n          </MenuItem>\n          {colors && colors.map(color =>\n            <MenuItem value={color} sx={{ color: { color }, fontSize: \".75rem\" }}>\n              {color}\n            </MenuItem>)}\n        </Select>\n        <FormHelperText>\n          Select a color. Select none to view all users.\n        </FormHelperText>\n      </FormControl>\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"center\">\n        {(color != \"\") && <ByColorResults colorProp={color} />}\n        {(color === \"\") && <AllUsersResults colorProp={color} />}\n      </Stack>\n    </div>\n  );\n}","/Users/raheema/Desktop/Colors/client/src/ResultsTable/ByColorResults.js",["65"],[],"import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport APIContext from '../store/APIContext';\n\nexport default function ByColorResults(props) {\n  const [data, setData] = React.useState([])\n  const apiContext = React.useContext(APIContext)\n\n  React.useEffect(() => {\n\n    const requestOptions = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': apiContext.authorization\n      },\n    };\n\n    fetch(`${apiContext.api_url}/api/v1/color/${props.colorProp}`, requestOptions)\n      .then((res) => res.json())\n      .then((res) => { setData(res.groups) });\n  }, [props.colorProp]);\n\n  return (\n    <TableContainer component={Paper} sx={{ width: \"75%\", boxShadow: `0px 2px 1px -1px rgb(0 0 0 / 20%), 1px 1px 1px 1px ${props.colorProp}, 1px 1px 3px 1px rgb(0 0 0 / 12%)` }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Group Name</TableCell>\n            <TableCell align=\"right\">User Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n\n          {Object.keys(data).map(group => <TableRow\n            key={group}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n          ><TableCell component=\"th\" scope=\"row\">\n              {group}\n            </TableCell>\n            <TableCell align=\"right\">\n              <Table sx={{ minWidth: 500 }} aria-label=\"simple table\">\n                {data[group].map(person => {\n                  return (\n                    <TableRow >\n                      <TableCell align=\"right\" sx={{ padding: \"2px 10px\", borderBottom: \"none\" }}>\n                        {person}\n                      </TableCell>\n                    </TableRow>)\n                })}\n              </Table>\n            </TableCell>\n          </TableRow>)}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/raheema/Desktop/Colors/client/src/ResultsTable/AllUsersResults.js",["66"],[],"import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport APIContext from '../store/APIContext';\n\n\nexport default function AllUsersResults(props) {\n\n  const [data, setData] = React.useState([])\n  const apiContext = React.useContext(APIContext)\n\n\n  React.useEffect(() => {\n\n    const requestOptions = {\n      headers: { 'Content-Type': 'application/json',\n      'Authorization': apiContext.authorization\n    }}\n  \n    fetch(`${apiContext.api_url}/api/v1/color/${props.colorProp}`, requestOptions)\n      .then((res) => res.json())\n      .then((data) => {  setData(data.result); });\n  }, []);\n\n  return (\n    <TableContainer component={Paper} sx={{ width: \"75%\", boxShadow: `0px 2px 1px -1px rgb(0 0 0 / 20%), 1px 1px 1px 1px ${props.colorProp}, 1px 1px 3px 1px rgb(0 0 0 / 12%)` }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Color</TableCell>\n            <TableCell align=\"right\">User Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n\n\n          {Object.keys(data).map(color => <TableRow\n            key={color}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n          ><TableCell component=\"th\" scope=\"row\" sx={{ color: color, fontSize: \".75rem\" }}>\n              {color}\n            </TableCell>\n            <TableCell align=\"right\">\n              <Table sx={{ minWidth: 500 }} aria-label=\"simple table\">\n                {data[color].map(group => {\n                  return <TableRow sx={{ padding: \"2px 10px\", borderBottom: \"1px solid rgba(224, 224, 224, 1)\" }}> \n                  <TableCell align=\"left\" sx={{ padding: \"2px 10px\", borderBottom: \"none\", fontSize: \".75rem\" }}>\n                    {Object.keys(group)}\n                  </TableCell>\n                    {Object.keys(group).map(user => {\n                      return <TableCell align=\"right\" sx={{ padding: \"2px 10px\", borderBottom: \"none\" }}>\n                        {group[user].map(user =>\n                        <Table>\n                          <TableRow>\n                            <TableCell align=\"right\" sx={{ padding: \"2px 10px\", borderBottom: \"none\", fontSize: \".75rem\" }}>\n                              {user}\n                            </TableCell>\n                          </TableRow>\n                        </Table>)}\n                      </TableCell>\n                    })}\n                  </TableRow>\n                })}\n              </Table>\n            </TableCell>\n          </TableRow>)}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/raheema/Desktop/Colors/client/src/store/APIContext.js",[],[],"/Users/raheema/Desktop/Colors/client/src/store/APIProvider.js",[],[],{"ruleId":"67","severity":1,"message":"68","line":63,"column":68,"nodeType":"69","messageId":"70","endLine":63,"endColumn":69,"suggestions":"71"},{"ruleId":"67","severity":1,"message":"72","line":63,"column":70,"nodeType":"69","messageId":"70","endLine":63,"endColumn":71,"suggestions":"73"},{"ruleId":"67","severity":1,"message":"74","line":63,"column":72,"nodeType":"69","messageId":"70","endLine":63,"endColumn":73,"suggestions":"75"},{"ruleId":"67","severity":1,"message":"76","line":63,"column":78,"nodeType":"69","messageId":"70","endLine":63,"endColumn":79,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":10,"nodeType":"80","messageId":"81","endLine":16,"endColumn":19},{"ruleId":"78","severity":1,"message":"82","line":16,"column":21,"nodeType":"80","messageId":"81","endLine":16,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":33,"column":6,"nodeType":"85","endLine":33,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":60,"column":17,"nodeType":"89","messageId":"90","endLine":60,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":27,"column":6,"nodeType":"85","endLine":27,"endColumn":23,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"92","line":28,"column":6,"nodeType":"85","endLine":28,"endColumn":8,"suggestions":"93"},"no-useless-escape","Unnecessary escape character: \\{.","Literal","unnecessaryEscape",["94","95"],"Unnecessary escape character: \\}.",["96","97"],"Unnecessary escape character: \\[.",["98","99"],"Unnecessary escape character: \\/.",["100","101"],"no-unused-vars","'showTable' is assigned a value but never used.","Identifier","unusedVar","'setShowTable' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'apiContext.api_url' and 'apiContext.authorization'. Either include them or remove the dependency array.","ArrayExpression",["102"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["103"],"React Hook React.useEffect has missing dependencies: 'apiContext.api_url', 'apiContext.authorization', and 'props.colorProp'. Either include them or remove the dependency array.",["104"],{"messageId":"105","fix":"106","desc":"107"},{"messageId":"108","fix":"109","desc":"110"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"108","fix":"112","desc":"110"},{"messageId":"105","fix":"113","desc":"107"},{"messageId":"108","fix":"114","desc":"110"},{"messageId":"105","fix":"115","desc":"107"},{"messageId":"108","fix":"116","desc":"110"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},"removeEscape",{"range":"122","text":"123"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"124","text":"125"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"126","text":"123"},{"range":"127","text":"125"},{"range":"128","text":"123"},{"range":"129","text":"125"},{"range":"130","text":"123"},{"range":"131","text":"125"},"Update the dependencies array to be: [apiContext.api_url, apiContext.authorization]",{"range":"132","text":"133"},"Update the dependencies array to be: [apiContext.api_url, apiContext.authorization, props.colorProp]",{"range":"134","text":"135"},{"range":"136","text":"135"},[2122,2123],"",[2122,2122],"\\",[2124,2125],[2124,2124],[2126,2127],[2126,2126],[2132,2133],[2132,2132],[1144,1146],"[apiContext.api_url, apiContext.authorization]",[910,927],"[apiContext.api_url, apiContext.authorization, props.colorProp]",[901,903]]