{"ast":null,"code":"var _jsxFileName = \"/Users/raheema/Desktop/Colors/client/src/store/APIProvider.js\";\nimport React from 'react';\nimport APIContext from \"./APIContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst APIProvider = props => {\n  var url = \"\";\n\n  if (process.env.NODE_ENV === \"development\") {\n    url = \"one\";\n  } else {\n    url = \"two\";\n  }\n\n  const apiContext = {\n    api_url: url,\n    authorization: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(APIContext.Provider, {\n    value: apiContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = APIProvider;\nexport default APIProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"APIProvider\");","map":{"version":3,"names":["React","APIContext","APIProvider","props","url","process","env","NODE_ENV","apiContext","api_url","authorization","children"],"sources":["/Users/raheema/Desktop/Colors/client/src/store/APIProvider.js"],"sourcesContent":["import React from 'react'\nimport APIContext from \"./APIContext\"\n\n\n\nconst APIProvider = (props) => {\n\n    var url = \"\"\n    if (process.env.NODE_ENV===\"development\"){\n        url = \"one\"\n    }else {\n        url = \"two\"\n    }\n\n    const apiContext = {\n        api_url: url ,\n        authorization: \"\"   \n    }\n\n    return (\n        <APIContext.Provider value={apiContext}>\n            {props.children}\n        </APIContext.Provider>\n    )\n}\n\nexport default APIProvider;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAE3B,IAAIC,GAAG,GAAG,EAAV;;EACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA3B,EAAyC;IACrCH,GAAG,GAAG,KAAN;EACH,CAFD,MAEM;IACFA,GAAG,GAAG,KAAN;EACH;;EAED,MAAMI,UAAU,GAAG;IACfC,OAAO,EAAEL,GADM;IAEfM,aAAa,EAAE;EAFA,CAAnB;EAKA,oBACI,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAEF,UAA5B;IAAA,UACKL,KAAK,CAACQ;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAnBD;;KAAMT,W;AAqBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}