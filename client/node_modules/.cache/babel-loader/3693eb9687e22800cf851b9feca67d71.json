{"ast":null,"code":"var _jsxFileName = \"/Users/raheema/Desktop/Colors/client/src/Forms/AddUserForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Card from '@mui/material/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddUserForm() {\n  _s();\n\n  const [username, setUsername] = React.useState();\n  const [group, setGroup] = React.useState();\n  const [color, setColor] = React.useState();\n  const [response, setResponse] = React.useState({\n    result: {\n      username: \"\",\n      color: \"\",\n      group: \"\"\n    }\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n  const [showError, setShowError] = React.useState(false);\n\n  const submitHandler = () => {\n    setSubmitted(true); //make sure none of the fields are empty \n\n    if (group === \"\" || color == null || username == null) {\n      setShowError(true);\n      return;\n    }\n\n    setShowError(false);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`/api/v1/user?username=${username}&color=${color}&group=${group}`, requestOptions).then(response => response.json()).then(data => setResponse(data));\n  };\n\n  const usernameHandler = event => {\n    setUsername(event.target.value.trim());\n  };\n\n  const groupHandler = event => {\n    setGroup(event.target.value.trim());\n  };\n\n  const colorHandler = event => {\n    setColor(event.target.value.trim());\n  };\n\n  const description = () => {\n    if (showError) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"outlined\",\n        severity: \"error\",\n        children: \"Please enter required fields.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else if (submitted) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"outlined\",\n        severity: \"success\",\n        children: \"User added!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter information below to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingBottom: \"10px\"\n          },\n          children: description()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"User Name\",\n            variant: \"filled\",\n            color: showError && username === \"\" ? \"error\" : \"success\",\n            focused: true,\n            onChange: usernameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Group\",\n            variant: \"filled\",\n            color: showError && group === \"\" ? \"error\" : \"success\",\n            focused: true,\n            onChange: groupHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Color\",\n            variant: \"filled\",\n            color: showError && color === \"\" ? \"error\" : \"success\",\n            focused: true,\n            onChange: colorHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: submitHandler,\n            style: {\n              backgroundColor: \"#65cc66\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), submitted && !showError && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            children: \"User information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mb: 1.5\n            },\n            color: \"text.secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Username:    \", response.result.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Group: \", response.result.group]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Color: \", response.result.color]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUserForm, \"PsKpn/6wQSpnFtV95ULdGU9FTBo=\");\n\n_c = AddUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"names":["React","TextField","Stack","Button","Grid","Alert","Typography","CardContent","Card","AddUserForm","username","setUsername","useState","group","setGroup","color","setColor","response","setResponse","result","submitted","setSubmitted","showError","setShowError","submitHandler","requestOptions","method","headers","fetch","then","json","data","usernameHandler","event","target","value","trim","groupHandler","colorHandler","description","paddingBottom","paddingTop","backgroundColor","minWidth","mb"],"sources":["/Users/raheema/Desktop/Colors/client/src/Forms/AddUserForm.js"],"sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Card from '@mui/material/Card';\n\nexport default function AddUserForm() {\n\n  const [username, setUsername] = React.useState()\n  const [group, setGroup] = React.useState()\n  const [color, setColor] = React.useState()\n  const [response, setResponse] = React.useState({ result: { username: \"\", color: \"\", group: \"\" } })\n  const [submitted, setSubmitted] = React.useState(false)\n  const [showError, setShowError] = React.useState(false)\n  const submitHandler = () => {\n    setSubmitted(true)\n\n    //make sure none of the fields are empty \n    if (group === \"\" || color == null || username == null) {\n      setShowError(true)\n      return;\n    }\n    setShowError(false)\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch(`/api/v1/user?username=${username}&color=${color}&group=${group}`, requestOptions)\n      .then(response => response.json())\n      .then(data => setResponse(data));\n\n  }\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value.trim())\n  }\n\n  const groupHandler = (event) => {\n    setGroup(event.target.value.trim())\n\n  }\n\n  const colorHandler = (event) => {\n    setColor(event.target.value.trim())\n  }\n\n  const description = () => {\n    if (showError) {\n      return <Alert variant=\"outlined\" severity=\"error\">\n        Please enter required fields.\n      </Alert>\n    }\n    else if (submitted) {\n      return <Alert variant=\"outlined\" severity=\"success\">\n        User added!\n      </Alert>\n\n    } else {\n      return <p>Enter information below to get started.</p>\n    }\n  }\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n\n        <form>\n          <div style={{ paddingBottom: \"10px\" }}>\n            {description()}\n          </div>\n\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"center\">\n\n            <TextField label=\"User Name\" variant=\"filled\" color={(showError && username === \"\") ? \"error\" : \"success\"} focused onChange={usernameHandler} />\n            <TextField label=\"Group\" variant=\"filled\" color={(showError && group === \"\") ? \"error\" : \"success\"} focused onChange={groupHandler} />\n            <TextField label=\"Color\" variant=\"filled\" color={(showError && color === \"\") ? \"error\" : \"success\"} focused onChange={colorHandler} />\n          </Stack>\n          <div style={{ paddingTop: \"5px\" }}>\n            <Button variant=\"contained\" onClick={submitHandler} style={{ backgroundColor: \"#65cc66\" }}>Submit</Button>\n          </div>\n\n        </form>\n\n      </Grid>\n      {(submitted && !showError) && <Grid item xs={12} >\n        <Card sx={{ minWidth: 500 }}>\n          <CardContent>\n\n            <Typography variant=\"h5\" component=\"div\">\n              User information\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              <p>Username:    {response.result.username}</p>\n              <p>Group: {response.result.group}</p>\n              <p>Color: {response.result.color}</p>\n\n            </Typography>\n\n          </CardContent>\n\n        </Card>\n      </Grid>\n      }\n    </Grid >\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}