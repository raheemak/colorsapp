{"ast":null,"code":"var _jsxFileName = \"/Users/raheema/Desktop/Colors/client/src/store/APIProvider.js\";\nimport React from 'react';\nimport APIContext from \"./APIContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst APIProvider = async props => {\n  //set api url based on current url \n  var url = \"\";\n  console.log(window.location.href);\n\n  if (window.location.href.includes(\"localhost\")) {\n    url = \"http://localhost:3001\";\n  } else {\n    //will be production\n    url = \"https://colorsappraheema.herokuapp.com\";\n  }\n\n  var options = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: '{\"client_id\":\"LbCNbwpfuTKNvUOOOTRXNdF3RMRz6Hf3\",\"client_secret\":\"omHXxXQ5qxeK4LY8jFrX9_YoibC6OOACKsjx2vApMlAw4gYUgR8pM1XSG4BlYbu2\",\"audience\":\"https://colorsappraheema.herokuapp.com/\",\"grant_type\":\"client_credentials\"}'\n  };\n  var authorizationToken = \"\";\n  await fetch(\"https://dev-nze5vfxy.us.auth0.com/oauth/token\", options).then(res => res.json()).then(res => {\n    authorizationToken = res.access_token;\n    const apiContext = {\n      api_url: url,\n      authorization: `Bearer ${authorizationToken}`\n    };\n    return /*#__PURE__*/_jsxDEV(APIContext.Provider, {\n      value: apiContext,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n};\n\n_c = APIProvider;\nexport default APIProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"APIProvider\");","map":{"version":3,"names":["React","APIContext","APIProvider","props","url","console","log","window","location","href","includes","options","method","headers","body","authorizationToken","fetch","then","res","json","access_token","apiContext","api_url","authorization","children"],"sources":["/Users/raheema/Desktop/Colors/client/src/store/APIProvider.js"],"sourcesContent":["import React from 'react'\nimport APIContext from \"./APIContext\"\n\n\n\nconst APIProvider = async (props) => {\n\n    //set api url based on current url \n    var url = \"\"\n    console.log(window.location.href)\n    if (window.location.href.includes(\"localhost\")) {\n        url = \"http://localhost:3001\"\n    } else {//will be production\n        url = \"https://colorsappraheema.herokuapp.com\"\n    }\n\n\n    var options = {\n        method: 'POST',\n        headers: { 'content-type': 'application/json' },\n        body: '{\"client_id\":\"LbCNbwpfuTKNvUOOOTRXNdF3RMRz6Hf3\",\"client_secret\":\"omHXxXQ5qxeK4LY8jFrX9_YoibC6OOACKsjx2vApMlAw4gYUgR8pM1XSG4BlYbu2\",\"audience\":\"https://colorsappraheema.herokuapp.com/\",\"grant_type\":\"client_credentials\"}'\n    };\n\n    var authorizationToken=\"\"\n    await fetch(\"https://dev-nze5vfxy.us.auth0.com/oauth/token\", options)\n    .then ((res)=>res.json())    \n    .then ((res)=>{authorizationToken = res.access_token; \n    \n    \n        const apiContext = {\n            api_url: url,\n            authorization: `Bearer ${authorizationToken}`\n        }\n    \n        return (\n            <APIContext.Provider value={apiContext}>\n                {props.children}\n            </APIContext.Provider>\n        )\n    \n    })\n            \n\n}\n\nexport default APIProvider;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;EAEjC;EACA,IAAIC,GAAG,GAAG,EAAV;EACAC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;;EACA,IAAIF,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,WAA9B,CAAJ,EAAgD;IAC5CN,GAAG,GAAG,uBAAN;EACH,CAFD,MAEO;IAAC;IACJA,GAAG,GAAG,wCAAN;EACH;;EAGD,IAAIO,OAAO,GAAG;IACVC,MAAM,EAAE,MADE;IAEVC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFC;IAGVC,IAAI,EAAE;EAHI,CAAd;EAMA,IAAIC,kBAAkB,GAAC,EAAvB;EACA,MAAMC,KAAK,CAAC,+CAAD,EAAkDL,OAAlD,CAAL,CACLM,IADK,CACEC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADR,EAELF,IAFK,CAEEC,GAAD,IAAO;IAACH,kBAAkB,GAAGG,GAAG,CAACE,YAAzB;IAGX,MAAMC,UAAU,GAAG;MACfC,OAAO,EAAElB,GADM;MAEfmB,aAAa,EAAG,UAASR,kBAAmB;IAF7B,CAAnB;IAKA,oBACI,QAAC,UAAD,CAAY,QAAZ;MAAqB,KAAK,EAAEM,UAA5B;MAAA,UACKlB,KAAK,CAACqB;IADX;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH,CAhBK,CAAN;AAmBH,CAtCD;;KAAMtB,W;AAwCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}